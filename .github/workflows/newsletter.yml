# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: newsletter

on:
  schedule:
    - cron: '0 21 * * *' # 24마다 시간 실행
  workflow_dispatch:

jobs:
  build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: access to secrets
      run: |
        echo "OPENAI_API_KEY=$OPENAI_API_KEY" >> .env
      env:
        OPENAI_API_KEY: ${{secrets.OPENAI_API_KEY}}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Run
      run: |
        python newsletter.py
    - name: List files in the workspace
      run: |
        echo "Current directory:"
        pwd
        echo "Files in current directory:"
        ls -l $GITHUB_WORKSPACE

    - name: Commit newsletter.html to main
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git fetch origin main
        git checkout main
        git add newsletter.html
        git commit -m "Update newsletter.html" || echo "No changes to commit"
        git pull origin main --rebase || echo "No changes to rebase"
        git push "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git" main

    # news.db, news.json → GitHub Pages(gh-pages 브랜치) 배포
    - name: Prepare public dir
      run: |
        mkdir -p public
        mv news.db news.json public/

    - name: Upload artifact for Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./public

  deploy:
    runs-on: macos-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Checkout main
        uses: actions/checkout@v4
      - name: Deploy news.json to gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout --orphan gh-pages
          git --work-tree=public add --all
          git --work-tree=public commit -m "Update news.json"
          git push -f "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git" gh-pages
